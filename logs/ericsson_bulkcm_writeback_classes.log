
class ExternalGsmCell(ManagedObject, BulkCMExtras):
    def __init__(self, **kwargs):
        ManagedObject.__init__(self, 'ExternalGsmCell',
         id=Parameter(name='id', is_attr=True),
         mnc=Parameter(name='mnc'),
         mcc=Parameter(name='mcc'),
         lac=Parameter(name='lac'),
         bcchFrequency=Parameter(name='bcchFrequency'),
         ncc=Parameter(name='ncc'),
         bcc=Parameter(name='bcc'),
         userLabel=Parameter(name='userLabel'),
         cellIdentity=Parameter(name='cellIdentity'),
         dtmSupport=Parameter(name='dtmSupport', is_vendor_specific=True, ns_prefix='es'),
         maxTxPowerUl=Parameter(name='maxTxPowerUl', is_vendor_specific=True, ns_prefix='es'),
         qRxLevMin=Parameter(name='qRxLevMin', is_vendor_specific=True, ns_prefix='es'),
         individualOffset=Parameter(name='individualOffset', is_vendor_specific=True, ns_prefix='es'),
         bandIndicator=Parameter(name='bandIndicator', is_vendor_specific=True, ns_prefix='es'),
         parentSystem=Parameter(name='parentSystem', is_vendor_specific=True, ns_prefix='es'),
         mncLength=Parameter(name='mncLength', is_vendor_specific=True, ns_prefix='es'),
         rac=Parameter(name='rac', is_vendor_specific=True, ns_prefix='es'),
         rimCapable=Parameter(name='rimCapable', is_vendor_specific=True, ns_prefix='es'),
        )
        
        BulkCMExtras.__init__(self)

        # Set the values
        for k, v in kwargs.items():
            self.set_parameter_value(k, v)

        self.ns_prefix = 'xn'
        
        

class ExternalUtranCell(ManagedObject, BulkCMExtras):
    def __init__(self, **kwargs):
        ManagedObject.__init__(self, 'ExternalUtranCell',
         id=Parameter(name='id', is_attr=True),
         rac=Parameter(name='rac'),
         lac=Parameter(name='lac'),
         primaryCpichPower=Parameter(name='primaryCpichPower'),
         primaryScramblingCode=Parameter(name='primaryScramblingCode'),
         uarfcnDl=Parameter(name='uarfcnDl'),
         uarfcnUl=Parameter(name='uarfcnUl'),
         mnc=Parameter(name='mnc'),
         mcc=Parameter(name='mcc'),
         rncId=Parameter(name='rncId'),
         cId=Parameter(name='cId'),
         userLabel=Parameter(name='userLabel'),
         individualOffset=Parameter(name='individualOffset', is_vendor_specific=True, ns_prefix='es'),
         maxTxPowerUl=Parameter(name='maxTxPowerUl', is_vendor_specific=True, ns_prefix='es'),
         qQualMin=Parameter(name='qQualMin', is_vendor_specific=True, ns_prefix='es'),
         qRxLevMin=Parameter(name='qRxLevMin', is_vendor_specific=True, ns_prefix='es'),
         agpsEnabled=Parameter(name='agpsEnabled', is_vendor_specific=True, ns_prefix='es'),
         cellCapability_hsdschSupport=Parameter(name='cellCapability_hsdschSupport', is_vendor_specific=True, ns_prefix='es'),
         cellCapability_edchSupport=Parameter(name='cellCapability_edchSupport', is_vendor_specific=True, ns_prefix='es'),
         cellCapability_edchTti2Support=Parameter(name='cellCapability_edchTti2Support', is_vendor_specific=True, ns_prefix='es'),
         cellCapability_enhancedL2Support=Parameter(name='cellCapability_enhancedL2Support', is_vendor_specific=True, ns_prefix='es'),
         cellCapability_fdpchSupport=Parameter(name='cellCapability_fdpchSupport', is_vendor_specific=True, ns_prefix='es'),
         cellCapability_multiCarrierSupport=Parameter(name='cellCapability_multiCarrierSupport', is_vendor_specific=True, ns_prefix='es'),
         cellCapability_cpcSupport=Parameter(name='cellCapability_cpcSupport', is_vendor_specific=True, ns_prefix='es'),
         cellCapability_qam64MimoSupport=Parameter(name='cellCapability_qam64MimoSupport', is_vendor_specific=True, ns_prefix='es'),
         transmissionScheme=Parameter(name='transmissionScheme', is_vendor_specific=True, ns_prefix='es'),
         parentSystem=Parameter(name='parentSystem', is_vendor_specific=True, ns_prefix='es'),
         mncLength=Parameter(name='mncLength', is_vendor_specific=True, ns_prefix='es'),
         hsAqmCongCtrlSpiSupport=Parameter(name='hsAqmCongCtrlSpiSupport', is_vendor_specific=True, ns_prefix='es'),
         hsAqmCongCtrlSupport=Parameter(name='hsAqmCongCtrlSupport', is_vendor_specific=True, ns_prefix='es'),
         srvccCapability=Parameter(name='srvccCapability', is_vendor_specific=True, ns_prefix='es'),
         reportingRange1a=Parameter(name='reportingRange1a', is_vendor_specific=True, ns_prefix='es'),
         reportingRange1b=Parameter(name='reportingRange1b', is_vendor_specific=True, ns_prefix='es'),
         timeToTrigger1a=Parameter(name='timeToTrigger1a', is_vendor_specific=True, ns_prefix='es'),
         timeToTrigger1b=Parameter(name='timeToTrigger1b', is_vendor_specific=True, ns_prefix='es'),
         rimCapable=Parameter(name='rimCapable', is_vendor_specific=True, ns_prefix='es'),
         lbUtranCellOffloadCapacity=Parameter(name='lbUtranCellOffloadCapacity', is_vendor_specific=True, ns_prefix='es'),
         cellCapability=Parameter(name='cellCapability', is_vendor_specific=True, ns_prefix='es'),
        )
        
        BulkCMExtras.__init__(self)

        # Set the values
        for k, v in kwargs.items():
            self.set_parameter_value(k, v)

        self.ns_prefix = 'xn'
        
        

class GsmRelation(ManagedObject, BulkCMExtras):
    def __init__(self, **kwargs):
        ManagedObject.__init__(self, 'GsmRelation',
         id=Parameter(name='id', is_attr=True),
         adjacentCell=Parameter(name='adjacentCell'),
         qOffset1sn=Parameter(name='qOffset1sn', is_vendor_specific=True, ns_prefix='es'),
         mobilityRelationType=Parameter(name='mobilityRelationType', is_vendor_specific=True, ns_prefix='es'),
         selectionPriority=Parameter(name='selectionPriority', is_vendor_specific=True, ns_prefix='es'),
        )
        
        BulkCMExtras.__init__(self)

        # Set the values
        for k, v in kwargs.items():
            self.set_parameter_value(k, v)

        self.ns_prefix = 'xn'
        
        

class IubLink(ManagedObject, BulkCMExtras):
    def __init__(self, **kwargs):
        ManagedObject.__init__(self, 'IubLink',
         id=Parameter(name='id', is_attr=True),
         userLabel=Parameter(name='userLabel'),
         iubLinkUtranCell=Parameter(name='iubLinkUtranCell'),
         iubLinkNodeBFunction=Parameter(name='iubLinkNodeBFunction'),
         rbsId=Parameter(name='rbsId', is_vendor_specific=True, ns_prefix='es'),
         dlHwAdm=Parameter(name='dlHwAdm', is_vendor_specific=True, ns_prefix='es'),
         ulHwAdm=Parameter(name='ulHwAdm', is_vendor_specific=True, ns_prefix='es'),
         rncModuleRef=Parameter(name='rncModuleRef', is_vendor_specific=True, ns_prefix='es'),
         userPlaneTransportOption_atm=Parameter(name='userPlaneTransportOption_atm', is_vendor_specific=True, ns_prefix='es'),
         userPlaneTransportOption_ipv4=Parameter(name='userPlaneTransportOption_ipv4', is_vendor_specific=True, ns_prefix='es'),
         controlPlaneTransportOption_atm=Parameter(name='controlPlaneTransportOption_atm', is_vendor_specific=True, ns_prefix='es'),
         controlPlaneTransportOption_ipv4=Parameter(name='controlPlaneTransportOption_ipv4', is_vendor_specific=True, ns_prefix='es'),
         userPlaneIpResourceRef=Parameter(name='userPlaneIpResourceRef', is_vendor_specific=True, ns_prefix='es'),
         administrativeState=Parameter(name='administrativeState', is_vendor_specific=True, ns_prefix='es'),
         remoteCpIpAddress1=Parameter(name='remoteCpIpAddress1', is_vendor_specific=True, ns_prefix='es'),
         remoteCpIpAddress2=Parameter(name='remoteCpIpAddress2', is_vendor_specific=True, ns_prefix='es'),
         sctpRef=Parameter(name='sctpRef', is_vendor_specific=True, ns_prefix='es'),
         l2EstReqRetryTimeNbapC=Parameter(name='l2EstReqRetryTimeNbapC', is_vendor_specific=True, ns_prefix='es'),
         l2EstReqRetryTimeNbapD=Parameter(name='l2EstReqRetryTimeNbapD', is_vendor_specific=True, ns_prefix='es'),
         atmUserPlaneTermSubrackRef=Parameter(name='atmUserPlaneTermSubrackRef', is_vendor_specific=True, ns_prefix='es'),
         cachedRemoteCpIpAddress1=Parameter(name='cachedRemoteCpIpAddress1', is_vendor_specific=True, ns_prefix='es'),
         cachedRemoteCpIpAddress2=Parameter(name='cachedRemoteCpIpAddress2', is_vendor_specific=True, ns_prefix='es'),
         userPlaneGbrAdmEnabled=Parameter(name='userPlaneGbrAdmEnabled', is_vendor_specific=True, ns_prefix='es'),
         userPlaneGbrAdmBandwidthDl=Parameter(name='userPlaneGbrAdmBandwidthDl', is_vendor_specific=True, ns_prefix='es'),
         userPlaneGbrAdmBandwidthUl=Parameter(name='userPlaneGbrAdmBandwidthUl', is_vendor_specific=True, ns_prefix='es'),
         userPlaneGbrAdmMarginDl=Parameter(name='userPlaneGbrAdmMarginDl', is_vendor_specific=True, ns_prefix='es'),
         userPlaneGbrAdmMarginUl=Parameter(name='userPlaneGbrAdmMarginUl', is_vendor_specific=True, ns_prefix='es'),
         softCongThreshGbrBwDl=Parameter(name='softCongThreshGbrBwDl', is_vendor_specific=True, ns_prefix='es'),
         softCongThreshGbrBwUl=Parameter(name='softCongThreshGbrBwUl', is_vendor_specific=True, ns_prefix='es'),
         spare=Parameter(name='spare', is_vendor_specific=True, ns_prefix='es'),
         spareA=Parameter(name='spareA', is_vendor_specific=True, ns_prefix='es'),
         poolRedundancy=Parameter(name='poolRedundancy', is_vendor_specific=True, ns_prefix='es'),
         rncModulePreferredRef=Parameter(name='rncModulePreferredRef', is_vendor_specific=True, ns_prefix='es'),
         rncModuleAllocWeight=Parameter(name='rncModuleAllocWeight', is_vendor_specific=True, ns_prefix='es'),
         linkType=Parameter(name='linkType', is_vendor_specific=True, ns_prefix='es'),
        )
        
        BulkCMExtras.__init__(self)

        # Set the values
        for k, v in kwargs.items():
            self.set_parameter_value(k, v)

        self.ns_prefix = 'xn'
        
        

class ManagedElement(ManagedObject, BulkCMExtras):
    def __init__(self, **kwargs):
        ManagedObject.__init__(self, 'ManagedElement',
         id=Parameter(name='id', is_attr=True),
         locationName=Parameter(name='locationName'),
         userDefinedState=Parameter(name='userDefinedState'),
         vendorName=Parameter(name='vendorName'),
         userLabel=Parameter(name='userLabel'),
         managedElementType=Parameter(name='managedElementType'),
         swVersion=Parameter(name='swVersion'),
         managedBy=Parameter(name='managedBy'),
         dnPrefix=Parameter(name='dnPrefix'),
         sourceType=Parameter(name='sourceType'),
         release=Parameter(name='release'),
         siteRef=Parameter(name='siteRef'),
         siteRef=Parameter(name='siteRef', is_vendor_specific=True, ns_prefix='es'),
         productType=Parameter(name='productType', is_vendor_specific=True, ns_prefix='es'),
         productName=Parameter(name='productName', is_vendor_specific=True, ns_prefix='es'),
         productNumber=Parameter(name='productNumber', is_vendor_specific=True, ns_prefix='es'),
         productRevision=Parameter(name='productRevision', is_vendor_specific=True, ns_prefix='es'),
         prodDesignation=Parameter(name='prodDesignation', is_vendor_specific=True, ns_prefix='es'),
         logicalName=Parameter(name='logicalName', is_vendor_specific=True, ns_prefix='es'),
         autoRestartRbs=Parameter(name='autoRestartRbs', is_vendor_specific=True, ns_prefix='es'),
         generateAlarm=Parameter(name='generateAlarm', is_vendor_specific=True, ns_prefix='es'),
         initCollectTraces=Parameter(name='initCollectTraces', is_vendor_specific=True, ns_prefix='es'),
         mirrorRelease=Parameter(name='mirrorRelease', is_vendor_specific=True, ns_prefix='es'),
         siteLocation=Parameter(name='siteLocation', is_vendor_specific=True, ns_prefix='es'),
         timeZone=Parameter(name='timeZone', is_vendor_specific=True, ns_prefix='es'),
         dateTimeOffset=Parameter(name='dateTimeOffset', is_vendor_specific=True, ns_prefix='es'),
         localDateTime=Parameter(name='localDateTime', is_vendor_specific=True, ns_prefix='es'),
        )
        
        BulkCMExtras.__init__(self)

        # Set the values
        for k, v in kwargs.items():
            self.set_parameter_value(k, v)

        self.ns_prefix = 'xn'
        
        

class MeContext(ManagedObject, BulkCMExtras):
    def __init__(self, **kwargs):
        ManagedObject.__init__(self, 'MeContext',
         id=Parameter(name='id', is_attr=True),
         dnPrefix=Parameter(name='dnPrefix'),
         userLabel=Parameter(name='userLabel'),
         ipAddress=Parameter(name='ipAddress'),
         segmentName=Parameter(name='segmentName'),
         mimSwitchPolicy=Parameter(name='mimSwitchPolicy'),
         neMIMversion=Parameter(name='neMIMversion'),
         compatibilityOfMIMs=Parameter(name='compatibilityOfMIMs'),
         connectionStatus=Parameter(name='connectionStatus'),
         mirrorMIBsynchStatus=Parameter(name='mirrorMIBsynchStatus'),
         mirrorMIBupdateStatus=Parameter(name='mirrorMIBupdateStatus'),
         generationCounter=Parameter(name='generationCounter'),
         neMIMName=Parameter(name='neMIMName'),
         neType=Parameter(name='neType'),
         neCreationComplete=Parameter(name='neCreationComplete'),
         restartWarning=Parameter(name='restartWarning'),
         rollbackMirrorMIBname=Parameter(name='rollbackMirrorMIBname'),
         neSecurityStatus=Parameter(name='neSecurityStatus'),
         bcrLastChange=Parameter(name='bcrLastChange'),
         bctLastChange=Parameter(name='bctLastChange'),
         telisLastChange=Parameter(name='telisLastChange'),
         lostSynchronisation=Parameter(name='lostSynchronisation'),
         nodeStartTime=Parameter(name='nodeStartTime'),
         pendingRestart=Parameter(name='pendingRestart'),
         rbsGroupRef=Parameter(name='rbsGroupRef'),
         userLabel=Parameter(name='userLabel', is_vendor_specific=True, ns_prefix='es'),
         ipAddress=Parameter(name='ipAddress', is_vendor_specific=True, ns_prefix='es'),
         neMIMversion=Parameter(name='neMIMversion', is_vendor_specific=True, ns_prefix='es'),
         lostSynchronisation=Parameter(name='lostSynchronisation', is_vendor_specific=True, ns_prefix='es'),
         bcrLastChange=Parameter(name='bcrLastChange', is_vendor_specific=True, ns_prefix='es'),
         bctLastChange=Parameter(name='bctLastChange', is_vendor_specific=True, ns_prefix='es'),
         multiStandardRbs6k=Parameter(name='multiStandardRbs6k', is_vendor_specific=True, ns_prefix='es'),
         mixedModeRadio=Parameter(name='mixedModeRadio', is_vendor_specific=True, ns_prefix='es'),
         mirrorMIBversion=Parameter(name='mirrorMIBversion', is_vendor_specific=True, ns_prefix='es'),
         stnNodes=Parameter(name='stnNodes', is_vendor_specific=True, ns_prefix='es'),
         associatedNodes=Parameter(name='associatedNodes', is_vendor_specific=True, ns_prefix='es'),
         associatedRadioNodes=Parameter(name='associatedRadioNodes', is_vendor_specific=True, ns_prefix='es'),
         associatedPicoNodes=Parameter(name='associatedPicoNodes', is_vendor_specific=True, ns_prefix='es'),
         rbsIubId=Parameter(name='rbsIubId', is_vendor_specific=True, ns_prefix='es'),
         notificationsSupported=Parameter(name='notificationsSupported', is_vendor_specific=True, ns_prefix='es'),
         upgradeMethodCapability=Parameter(name='upgradeMethodCapability', is_vendor_specific=True, ns_prefix='es'),
         createUpgradePackageCapability=Parameter(name='createUpgradePackageCapability', is_vendor_specific=True, ns_prefix='es'),
         lastProcessedEventTime=Parameter(name='lastProcessedEventTime', is_vendor_specific=True, ns_prefix='es'),
         associatedRnc=Parameter(name='associatedRnc', is_vendor_specific=True, ns_prefix='es'),
        )
        
        BulkCMExtras.__init__(self)

        # Set the values
        for k, v in kwargs.items():
            self.set_parameter_value(k, v)

        self.ns_prefix = 'xn'
        
        

class NodeBFunction(ManagedObject, BulkCMExtras):
    def __init__(self, **kwargs):
        ManagedObject.__init__(self, 'NodeBFunction',
         id=Parameter(name='id', is_attr=True),
         nodeBFunctionIubLink=Parameter(name='nodeBFunctionIubLink'),
         userLabel=Parameter(name='userLabel'),
         nodeSCProfileID=Parameter(name='nodeSCProfileID'),
         eulNoReschUsers=Parameter(name='eulNoReschUsers'),
         eulTargetRate=Parameter(name='eulTargetRate'),
         eulMaxShoRate=Parameter(name='eulMaxShoRate'),
         eulSchedulingWeight=Parameter(name='eulSchedulingWeight'),
         eulNonServHwRate=Parameter(name='eulNonServHwRate'),
         eulLowRate=Parameter(name='eulLowRate'),
         eulMaxAllowedSchRate=Parameter(name='eulMaxAllowedSchRate'),
         toaeDch=Parameter(name='toaeDch', is_vendor_specific=True, ns_prefix='es'),
         branchDiffAbsTime=Parameter(name='branchDiffAbsTime', is_vendor_specific=True, ns_prefix='es'),
         toaeCch=Parameter(name='toaeCch', is_vendor_specific=True, ns_prefix='es'),
         branchDiffMeasTime=Parameter(name='branchDiffMeasTime', is_vendor_specific=True, ns_prefix='es'),
         steeredHsAllocation=Parameter(name='steeredHsAllocation', is_vendor_specific=True, ns_prefix='es'),
         eulNoReschUsers=Parameter(name='eulNoReschUsers', is_vendor_specific=True, ns_prefix='es'),
         eulTargetRate=Parameter(name='eulTargetRate', is_vendor_specific=True, ns_prefix='es'),
         eulMaxShoRate=Parameter(name='eulMaxShoRate', is_vendor_specific=True, ns_prefix='es'),
         ulLicFractBbPool2=Parameter(name='ulLicFractBbPool2', is_vendor_specific=True, ns_prefix='es'),
         dlLicFractBbPool2=Parameter(name='dlLicFractBbPool2', is_vendor_specific=True, ns_prefix='es'),
         iafAnrState=Parameter(name='iafAnrState', is_vendor_specific=True, ns_prefix='es'),
         nbapDscp=Parameter(name='nbapDscp', is_vendor_specific=True, ns_prefix='es'),
         analogUlAlignIsActive=Parameter(name='analogUlAlignIsActive', is_vendor_specific=True, ns_prefix='es'),
         eulNonServHwRate=Parameter(name='eulNonServHwRate', is_vendor_specific=True, ns_prefix='es'),
         eulLowRate=Parameter(name='eulLowRate', is_vendor_specific=True, ns_prefix='es'),
         eulSchedulingWeight=Parameter(name='eulSchedulingWeight', is_vendor_specific=True, ns_prefix='es'),
         sharedEquipmentController=Parameter(name='sharedEquipmentController', is_vendor_specific=True, ns_prefix='es'),
         featureStateStandardizedTma=Parameter(name='featureStateStandardizedTma', is_vendor_specific=True, ns_prefix='es'),
         featureStateStandardizedRet=Parameter(name='featureStateStandardizedRet', is_vendor_specific=True, ns_prefix='es'),
         featureStateDualStackIub=Parameter(name='featureStateDualStackIub', is_vendor_specific=True, ns_prefix='es'),
         featureStateEul2msTti=Parameter(name='featureStateEul2msTti', is_vendor_specific=True, ns_prefix='es'),
         featureStateDlPowerControlEul=Parameter(name='featureStateDlPowerControlEul', is_vendor_specific=True, ns_prefix='es'),
         featureStateGrake=Parameter(name='featureStateGrake', is_vendor_specific=True, ns_prefix='es'),
         featureStateMbmsIubEfficiency=Parameter(name='featureStateMbmsIubEfficiency', is_vendor_specific=True, ns_prefix='es'),
         featureState16Qam=Parameter(name='featureState16Qam', is_vendor_specific=True, ns_prefix='es'),
         featureState64Qam=Parameter(name='featureState64Qam', is_vendor_specific=True, ns_prefix='es'),
         featureStateHsdpaFlexibleScheduler=Parameter(name='featureStateHsdpaFlexibleScheduler', is_vendor_specific=True, ns_prefix='es'),
         eulMaxAllowedSchRate=Parameter(name='eulMaxAllowedSchRate', is_vendor_specific=True, ns_prefix='es'),
         featureStateHsdpaImprovedLinkAdaptation=Parameter(name='featureStateHsdpaImprovedLinkAdaptation', is_vendor_specific=True, ns_prefix='es'),
         featureStateRetCascading=Parameter(name='featureStateRetCascading', is_vendor_specific=True, ns_prefix='es'),
         availableRbsChannelElementsDownlink=Parameter(name='availableRbsChannelElementsDownlink', is_vendor_specific=True, ns_prefix='es'),
         availableRbsChannelElementsUplink=Parameter(name='availableRbsChannelElementsUplink', is_vendor_specific=True, ns_prefix='es'),
         licenseCapacityRbsChannelElementsDownlink=Parameter(name='licenseCapacityRbsChannelElementsDownlink', is_vendor_specific=True, ns_prefix='es'),
         licenseCapacityRbsChannelElementsUplink=Parameter(name='licenseCapacityRbsChannelElementsUplink', is_vendor_specific=True, ns_prefix='es'),
         featureStateEulForLargeRbsConfig=Parameter(name='featureStateEulForLargeRbsConfig', is_vendor_specific=True, ns_prefix='es'),
         featureStateIncrNumHsCodes=Parameter(name='featureStateIncrNumHsCodes', is_vendor_specific=True, ns_prefix='es'),
         eul2msFirstSchedStep=Parameter(name='eul2msFirstSchedStep', is_vendor_specific=True, ns_prefix='es'),
         featureStatePerHarqProcessGrant=Parameter(name='featureStatePerHarqProcessGrant', is_vendor_specific=True, ns_prefix='es'),
         featureStateDualTmaSupport=Parameter(name='featureStateDualTmaSupport', is_vendor_specific=True, ns_prefix='es'),
         featureStateHsdpaMinBitRate=Parameter(name='featureStateHsdpaMinBitRate', is_vendor_specific=True, ns_prefix='es'),
         eulDchMaxAllowedSchRate=Parameter(name='eulDchMaxAllowedSchRate', is_vendor_specific=True, ns_prefix='es'),
         featureStateAbsoluteTimeSynch=Parameter(name='featureStateAbsoluteTimeSynch', is_vendor_specific=True, ns_prefix='es'),
         featureStateMixedMode=Parameter(name='featureStateMixedMode', is_vendor_specific=True, ns_prefix='es'),
         featureStateHsdpaRbrQosProfiling=Parameter(name='featureStateHsdpaRbrQosProfiling', is_vendor_specific=True, ns_prefix='es'),
         featureStateInterferenceSuppression=Parameter(name='featureStateInterferenceSuppression', is_vendor_specific=True, ns_prefix='es'),
         featureStatePsiCoverage=Parameter(name='featureStatePsiCoverage', is_vendor_specific=True, ns_prefix='es'),
         eulInactivityHighRateTime=Parameter(name='eulInactivityHighRateTime', is_vendor_specific=True, ns_prefix='es'),
         eulInactivityLowRateTime=Parameter(name='eulInactivityLowRateTime', is_vendor_specific=True, ns_prefix='es'),
         featureStateCeCapEul=Parameter(name='featureStateCeCapEul', is_vendor_specific=True, ns_prefix='es'),
         featureStateHsAqmCongCtrl=Parameter(name='featureStateHsAqmCongCtrl', is_vendor_specific=True, ns_prefix='es'),
         featureStateRbsMpLoadSharing=Parameter(name='featureStateRbsMpLoadSharing', is_vendor_specific=True, ns_prefix='es'),
         licenseCapacityChannelElementDl=Parameter(name='licenseCapacityChannelElementDl', is_vendor_specific=True, ns_prefix='es'),
         licenseCapacityChannelElementUl=Parameter(name='licenseCapacityChannelElementUl', is_vendor_specific=True, ns_prefix='es'),
         spare=Parameter(name='spare', is_vendor_specific=True, ns_prefix='es'),
         featureStateUlFcc=Parameter(name='featureStateUlFcc', is_vendor_specific=True, ns_prefix='es'),
         eulFachInitialRate=Parameter(name='eulFachInitialRate', is_vendor_specific=True, ns_prefix='es'),
         featureStateIntSuppEul10ms=Parameter(name='featureStateIntSuppEul10ms', is_vendor_specific=True, ns_prefix='es'),
         technicianPresent=Parameter(name='technicianPresent', is_vendor_specific=True, ns_prefix='es'),
         eulLowUsageTime=Parameter(name='eulLowUsageTime', is_vendor_specific=True, ns_prefix='es'),
         featureStateCeExtForEul=Parameter(name='featureStateCeExtForEul', is_vendor_specific=True, ns_prefix='es'),
         featureStateIncreasedHsCodeCap=Parameter(name='featureStateIncreasedHsCodeCap', is_vendor_specific=True, ns_prefix='es'),
         alarmSuppressed=Parameter(name='alarmSuppressed', is_vendor_specific=True, ns_prefix='es'),
         featureStateHsdpaMcInterDuSched=Parameter(name='featureStateHsdpaMcInterDuSched', is_vendor_specific=True, ns_prefix='es'),
         hsdpaMcInterDuSchedCapability=Parameter(name='hsdpaMcInterDuSchedCapability', is_vendor_specific=True, ns_prefix='es'),
         featureStateCombinedCell=Parameter(name='featureStateCombinedCell', is_vendor_specific=True, ns_prefix='es'),
         featureStateImprovedDAgc=Parameter(name='featureStateImprovedDAgc', is_vendor_specific=True, ns_prefix='es'),
         eulMaxTotalProtectedRate=Parameter(name='eulMaxTotalProtectedRate', is_vendor_specific=True, ns_prefix='es'),
         licenseStateHsOlpc=Parameter(name='licenseStateHsOlpc', is_vendor_specific=True, ns_prefix='es'),
         featureStateIntSuppAllBearers=Parameter(name='featureStateIntSuppAllBearers', is_vendor_specific=True, ns_prefix='es'),
         eulFachMaxDynAllocation=Parameter(name='eulFachMaxDynAllocation', is_vendor_specific=True, ns_prefix='es'),
         eulFachMinAllocation=Parameter(name='eulFachMinAllocation', is_vendor_specific=True, ns_prefix='es'),
         featureStateCeEfficiencyEul=Parameter(name='featureStateCeEfficiencyEul', is_vendor_specific=True, ns_prefix='es'),
         featureStateIncreasedCellCarrierSupport=Parameter(name='featureStateIncreasedCellCarrierSupport', is_vendor_specific=True, ns_prefix='es'),
         ulLicFractBbPool=Parameter(name='ulLicFractBbPool', is_vendor_specific=True, ns_prefix='es'),
         dlLicFractBbPool=Parameter(name='dlLicFractBbPool', is_vendor_specific=True, ns_prefix='es'),
         featureStateUlCoMpReception=Parameter(name='featureStateUlCoMpReception', is_vendor_specific=True, ns_prefix='es'),
         ulCoMpCapability=Parameter(name='ulCoMpCapability', is_vendor_specific=True, ns_prefix='es'),
         antennaDeviceScanStatus=Parameter(name='antennaDeviceScanStatus', is_vendor_specific=True, ns_prefix='es'),
         featureStateEulLowLatencyPresched=Parameter(name='featureStateEulLowLatencyPresched', is_vendor_specific=True, ns_prefix='es'),
         stnNodes=Parameter(name='stnNodes', is_vendor_specific=True, ns_prefix='es'),
         release=Parameter(name='release', is_vendor_specific=True, ns_prefix='es'),
         dualBandSectorGroup1=Parameter(name='dualBandSectorGroup1', is_vendor_specific=True, ns_prefix='es'),
         dualBandSectorGroup2=Parameter(name='dualBandSectorGroup2', is_vendor_specific=True, ns_prefix='es'),
         dualBandSectorGroup3=Parameter(name='dualBandSectorGroup3', is_vendor_specific=True, ns_prefix='es'),
         dualBandSectorGroup4=Parameter(name='dualBandSectorGroup4', is_vendor_specific=True, ns_prefix='es'),
         dualBandSectorGroup5=Parameter(name='dualBandSectorGroup5', is_vendor_specific=True, ns_prefix='es'),
         dualBandSectorGroup6=Parameter(name='dualBandSectorGroup6', is_vendor_specific=True, ns_prefix='es'),
         featureStateMultiSectorPerRadio=Parameter(name='featureStateMultiSectorPerRadio', is_vendor_specific=True, ns_prefix='es'),
         featureStateUlSpectrumAnalyzer=Parameter(name='featureStateUlSpectrumAnalyzer', is_vendor_specific=True, ns_prefix='es'),
         nonEqPwrCommonPrecoderState=Parameter(name='nonEqPwrCommonPrecoderState', is_vendor_specific=True, ns_prefix='es'),
        )
        
        BulkCMExtras.__init__(self)

        # Set the values
        for k, v in kwargs.items():
            self.set_parameter_value(k, v)

        self.ns_prefix = 'xn'
        
        

class RncFunction(ManagedObject, BulkCMExtras):
    def __init__(self, **kwargs):
        ManagedObject.__init__(self, 'RncFunction',
         id=Parameter(name='id', is_attr=True),
         userLabel=Parameter(name='userLabel'),
         mcc=Parameter(name='mcc'),
         mnc=Parameter(name='mnc'),
         rncId=Parameter(name='rncId'),
         mncLength=Parameter(name='mncLength', is_vendor_specific=True, ns_prefix='es'),
         emergencyCallRedirect=Parameter(name='emergencyCallRedirect', is_vendor_specific=True, ns_prefix='es'),
         loadSharingDirRetryEnabled=Parameter(name='loadSharingDirRetryEnabled', is_vendor_specific=True, ns_prefix='es'),
         hsCellChangeAllowed=Parameter(name='hsCellChangeAllowed', is_vendor_specific=True, ns_prefix='es'),
         hsOnlyBestCell=Parameter(name='hsOnlyBestCell', is_vendor_specific=True, ns_prefix='es'),
         aliasPlmnIdentities_mcc=Parameter(name='aliasPlmnIdentities_mcc', is_vendor_specific=True, ns_prefix='es'),
         aliasPlmnIdentities_mnc=Parameter(name='aliasPlmnIdentities_mnc', is_vendor_specific=True, ns_prefix='es'),
         ctrFileSize=Parameter(name='ctrFileSize', is_vendor_specific=True, ns_prefix='es'),
         gpehDataLevel=Parameter(name='gpehDataLevel', is_vendor_specific=True, ns_prefix='es'),
         gpehFileSize=Parameter(name='gpehFileSize', is_vendor_specific=True, ns_prefix='es'),
         loadSharingRrcEnabled=Parameter(name='loadSharingRrcEnabled', is_vendor_specific=True, ns_prefix='es'),
         uetrFileSize=Parameter(name='uetrFileSize', is_vendor_specific=True, ns_prefix='es'),
         networkResourceIdentifierLengthCs=Parameter(name='networkResourceIdentifierLengthCs', is_vendor_specific=True, ns_prefix='es'),
         networkResourceIdentifierLengthPs=Parameter(name='networkResourceIdentifierLengthPs', is_vendor_specific=True, ns_prefix='es'),
         hsToDchTrigger_servHsChangeInterRnc=Parameter(name='hsToDchTrigger_servHsChangeInterRnc', is_vendor_specific=True, ns_prefix='es'),
         hsToDchTrigger_servHsChangeIntraRnc=Parameter(name='hsToDchTrigger_servHsChangeIntraRnc', is_vendor_specific=True, ns_prefix='es'),
         hsToDchTrigger_changeOfBestCellIntraRnc=Parameter(name='hsToDchTrigger_changeOfBestCellIntraRnc', is_vendor_specific=True, ns_prefix='es'),
         hsToDchTrigger_poorQualityDetected=Parameter(name='hsToDchTrigger_poorQualityDetected', is_vendor_specific=True, ns_prefix='es'),
         hsToDchTrigger_changeOfBestCellInterRnc=Parameter(name='hsToDchTrigger_changeOfBestCellInterRnc', is_vendor_specific=True, ns_prefix='es'),
         ecLocationAttemptUmts=Parameter(name='ecLocationAttemptUmts', is_vendor_specific=True, ns_prefix='es'),
         ecCnSbhoRequestIgnore=Parameter(name='ecCnSbhoRequestIgnore', is_vendor_specific=True, ns_prefix='es'),
         ecCnPriorityLevel=Parameter(name='ecCnPriorityLevel', is_vendor_specific=True, ns_prefix='es'),
         ecSbhoTimer=Parameter(name='ecSbhoTimer', is_vendor_specific=True, ns_prefix='es'),
         primaryCnOperatorRef=Parameter(name='primaryCnOperatorRef', is_vendor_specific=True, ns_prefix='es'),
         highPrioScanReserve=Parameter(name='highPrioScanReserve', is_vendor_specific=True, ns_prefix='es'),
         maxPowerOverloadHystTime=Parameter(name='maxPowerOverloadHystTime', is_vendor_specific=True, ns_prefix='es'),
         nbapDscp=Parameter(name='nbapDscp', is_vendor_specific=True, ns_prefix='es'),
         mocnExternalNriMatching=Parameter(name='mocnExternalNriMatching', is_vendor_specific=True, ns_prefix='es'),
         maxAllowedGbrDlPsStream=Parameter(name='maxAllowedGbrDlPsStream', is_vendor_specific=True, ns_prefix='es'),
         nbapAuditInterval=Parameter(name='nbapAuditInterval', is_vendor_specific=True, ns_prefix='es'),
         pcapPositioningMode=Parameter(name='pcapPositioningMode', is_vendor_specific=True, ns_prefix='es'),
         iuSccpConRateMeasPeriod=Parameter(name='iuSccpConRateMeasPeriod', is_vendor_specific=True, ns_prefix='es'),
         iuSccpConRateThresh=Parameter(name='iuSccpConRateThresh', is_vendor_specific=True, ns_prefix='es'),
         intraNodeIpResourceRef=Parameter(name='intraNodeIpResourceRef', is_vendor_specific=True, ns_prefix='es'),
         initialIuAccessRateMax=Parameter(name='initialIuAccessRateMax', is_vendor_specific=True, ns_prefix='es'),
         evolvedHsUePrioEnabled=Parameter(name='evolvedHsUePrioEnabled', is_vendor_specific=True, ns_prefix='es'),
         evolvedHsUePrioLevel=Parameter(name='evolvedHsUePrioLevel', is_vendor_specific=True, ns_prefix='es'),
         evolvedHsUePrioLoadThresh=Parameter(name='evolvedHsUePrioLoadThresh', is_vendor_specific=True, ns_prefix='es'),
         cyclicAcb_acbEnabled=Parameter(name='cyclicAcb_acbEnabled', is_vendor_specific=True, ns_prefix='es'),
         cyclicAcb_rotationGroupSize=Parameter(name='cyclicAcb_rotationGroupSize', is_vendor_specific=True, ns_prefix='es'),
         cyclicAcbCs_acbEnabled=Parameter(name='cyclicAcbCs_acbEnabled', is_vendor_specific=True, ns_prefix='es'),
         cyclicAcbCs_rotationGroupSize=Parameter(name='cyclicAcbCs_rotationGroupSize', is_vendor_specific=True, ns_prefix='es'),
         cyclicAcbPs_acbEnabled=Parameter(name='cyclicAcbPs_acbEnabled', is_vendor_specific=True, ns_prefix='es'),
         cyclicAcbPs_rotationGroupSize=Parameter(name='cyclicAcbPs_rotationGroupSize', is_vendor_specific=True, ns_prefix='es'),
         cyclicAcbRotationTime=Parameter(name='cyclicAcbRotationTime', is_vendor_specific=True, ns_prefix='es'),
         spare=Parameter(name='spare', is_vendor_specific=True, ns_prefix='es'),
         ctchAdmCtrl=Parameter(name='ctchAdmCtrl', is_vendor_specific=True, ns_prefix='es'),
         hsFachEnabled=Parameter(name='hsFachEnabled', is_vendor_specific=True, ns_prefix='es'),
         fastDormancyMethod=Parameter(name='fastDormancyMethod', is_vendor_specific=True, ns_prefix='es'),
         enhUeDrxEnabled=Parameter(name='enhUeDrxEnabled', is_vendor_specific=True, ns_prefix='es'),
         amrNbMmMrUlTfcRepeat=Parameter(name='amrNbMmMrUlTfcRepeat', is_vendor_specific=True, ns_prefix='es'),
         cbsFirstMsgDelayMargin=Parameter(name='cbsFirstMsgDelayMargin', is_vendor_specific=True, ns_prefix='es'),
         rimUtraSiRetries=Parameter(name='rimUtraSiRetries', is_vendor_specific=True, ns_prefix='es'),
         rimUtraSiTimeout=Parameter(name='rimUtraSiTimeout', is_vendor_specific=True, ns_prefix='es'),
         rncType=Parameter(name='rncType', is_vendor_specific=True, ns_prefix='es'),
         spareA=Parameter(name='spareA', is_vendor_specific=True, ns_prefix='es'),
         spareB=Parameter(name='spareB', is_vendor_specific=True, ns_prefix='es'),
         spareC=Parameter(name='spareC', is_vendor_specific=True, ns_prefix='es'),
         eulFachEnabled=Parameter(name='eulFachEnabled', is_vendor_specific=True, ns_prefix='es'),
         robustRwrEutraEnabled=Parameter(name='robustRwrEutraEnabled', is_vendor_specific=True, ns_prefix='es'),
         offloadDedicPrioEutraTime=Parameter(name='offloadDedicPrioEutraTime', is_vendor_specific=True, ns_prefix='es'),
         offloadDedicPrioEutraEnabled=Parameter(name='offloadDedicPrioEutraEnabled', is_vendor_specific=True, ns_prefix='es'),
         mocnDedicPrioEutraEnabled=Parameter(name='mocnDedicPrioEutraEnabled', is_vendor_specific=True, ns_prefix='es'),
         eulUsersAdmEulHsCcEnabled=Parameter(name='eulUsersAdmEulHsCcEnabled', is_vendor_specific=True, ns_prefix='es'),
         nwInitCallReestTime=Parameter(name='nwInitCallReestTime', is_vendor_specific=True, ns_prefix='es'),
         csPriorityRabSetupTime=Parameter(name='csPriorityRabSetupTime', is_vendor_specific=True, ns_prefix='es'),
         aliasPlmnIdentities=Parameter(name='aliasPlmnIdentities', is_vendor_specific=True, ns_prefix='es'),
        )
        
        BulkCMExtras.__init__(self)

        # Set the values
        for k, v in kwargs.items():
            self.set_parameter_value(k, v)

        self.ns_prefix = 'xn'
        
        

class UtranCell(ManagedObject, BulkCMExtras):
    def __init__(self, **kwargs):
        ManagedObject.__init__(self, 'UtranCell',
         id=Parameter(name='id', is_attr=True),
         localCellId=Parameter(name='localCellId'),
         uarfcnUl=Parameter(name='uarfcnUl'),
         uarfcnDl=Parameter(name='uarfcnDl'),
         primaryScramblingCode=Parameter(name='primaryScramblingCode'),
         primaryCpichPower=Parameter(name='primaryCpichPower'),
         maximumTransmissionPower=Parameter(name='maximumTransmissionPower'),
         primarySchPower=Parameter(name='primarySchPower'),
         cId=Parameter(name='cId'),
         userLabel=Parameter(name='userLabel'),
         secondarySchPower=Parameter(name='secondarySchPower'),
         bchPower=Parameter(name='bchPower'),
         lac=Parameter(name='lac'),
         rac=Parameter(name='rac'),
         sac=Parameter(name='sac'),
         utranCellIubLink=Parameter(name='utranCellIubLink'),
         uraList=Parameter(name='uraList'),
         creationTime=Parameter(name='creationTime'),
         lbUtranCellOffloadCapacity=Parameter(name='lbUtranCellOffloadCapacity', is_vendor_specific=True, ns_prefix='es'),
         tCell=Parameter(name='tCell', is_vendor_specific=True, ns_prefix='es'),
         cellReserved=Parameter(name='cellReserved', is_vendor_specific=True, ns_prefix='es'),
         anrBlackList=Parameter(name='anrBlackList', is_vendor_specific=True, ns_prefix='es'),
         treSelection=Parameter(name='treSelection', is_vendor_specific=True, ns_prefix='es'),
         qualMeasQuantity=Parameter(name='qualMeasQuantity', is_vendor_specific=True, ns_prefix='es'),
         qHyst1=Parameter(name='qHyst1', is_vendor_specific=True, ns_prefix='es'),
         qHyst2=Parameter(name='qHyst2', is_vendor_specific=True, ns_prefix='es'),
         qQualMin=Parameter(name='qQualMin', is_vendor_specific=True, ns_prefix='es'),
         qRxLevMin=Parameter(name='qRxLevMin', is_vendor_specific=True, ns_prefix='es'),
         individualOffset=Parameter(name='individualOffset', is_vendor_specific=True, ns_prefix='es'),
         pwrAdm=Parameter(name='pwrAdm', is_vendor_specific=True, ns_prefix='es'),
         pwrOffset=Parameter(name='pwrOffset', is_vendor_specific=True, ns_prefix='es'),
         pwrHyst=Parameter(name='pwrHyst', is_vendor_specific=True, ns_prefix='es'),
         tmCongAction=Parameter(name='tmCongAction', is_vendor_specific=True, ns_prefix='es'),
         releaseAseDl=Parameter(name='releaseAseDl', is_vendor_specific=True, ns_prefix='es'),
         aseDlAdm=Parameter(name='aseDlAdm', is_vendor_specific=True, ns_prefix='es'),
         dlCodeAdm=Parameter(name='dlCodeAdm', is_vendor_specific=True, ns_prefix='es'),
         aseUlAdm=Parameter(name='aseUlAdm', is_vendor_specific=True, ns_prefix='es'),
         sf8Adm=Parameter(name='sf8Adm', is_vendor_specific=True, ns_prefix='es'),
         sf32Adm=Parameter(name='sf32Adm', is_vendor_specific=True, ns_prefix='es'),
         minPwrRl=Parameter(name='minPwrRl', is_vendor_specific=True, ns_prefix='es'),
         maxRate=Parameter(name='maxRate', is_vendor_specific=True, ns_prefix='es'),
         interRate=Parameter(name='interRate', is_vendor_specific=True, ns_prefix='es'),
         minimumRate=Parameter(name='minimumRate', is_vendor_specific=True, ns_prefix='es'),
         maxPwrMax=Parameter(name='maxPwrMax', is_vendor_specific=True, ns_prefix='es'),
         interPwrMax=Parameter(name='interPwrMax', is_vendor_specific=True, ns_prefix='es'),
         minPwrMax=Parameter(name='minPwrMax', is_vendor_specific=True, ns_prefix='es'),
         compModeAdm=Parameter(name='compModeAdm', is_vendor_specific=True, ns_prefix='es'),
         iFHyst=Parameter(name='iFHyst', is_vendor_specific=True, ns_prefix='es'),
         iFCong=Parameter(name='iFCong', is_vendor_specific=True, ns_prefix='es'),
         interFreqFddMeasIndicator=Parameter(name='interFreqFddMeasIndicator', is_vendor_specific=True, ns_prefix='es'),
         sRatSearch=Parameter(name='sRatSearch', is_vendor_specific=True, ns_prefix='es'),
         sIntraSearch=Parameter(name='sIntraSearch', is_vendor_specific=True, ns_prefix='es'),
         sInterSearch=Parameter(name='sInterSearch', is_vendor_specific=True, ns_prefix='es'),
         fachMeasOccaCycLenCoeff=Parameter(name='fachMeasOccaCycLenCoeff', is_vendor_specific=True, ns_prefix='es'),
         accessClassNBarred=Parameter(name='accessClassNBarred', is_vendor_specific=True, ns_prefix='es'),
         utranCellPosition=Parameter(name='utranCellPosition', is_vendor_specific=True, ns_prefix='es'),
         maxTxPowerUl=Parameter(name='maxTxPowerUl', is_vendor_specific=True, ns_prefix='es'),
         reservedBy=Parameter(name='reservedBy', is_vendor_specific=True, ns_prefix='es'),
         sib1PlmnScopeValueTag=Parameter(name='sib1PlmnScopeValueTag', is_vendor_specific=True, ns_prefix='es'),
         sf16Adm=Parameter(name='sf16Adm', is_vendor_specific=True, ns_prefix='es'),
         hoType=Parameter(name='hoType', is_vendor_specific=True, ns_prefix='es'),
         usedFreqThresh2dEcno=Parameter(name='usedFreqThresh2dEcno', is_vendor_specific=True, ns_prefix='es'),
         usedFreqThresh2dRscp=Parameter(name='usedFreqThresh2dRscp', is_vendor_specific=True, ns_prefix='es'),
         administrativeState=Parameter(name='administrativeState', is_vendor_specific=True, ns_prefix='es'),
         loadSharingGsmThreshold=Parameter(name='loadSharingGsmThreshold', is_vendor_specific=True, ns_prefix='es'),
         loadSharingGsmFraction=Parameter(name='loadSharingGsmFraction', is_vendor_specific=True, ns_prefix='es'),
         snDirectedRetryTarget=Parameter(name='snDirectedRetryTarget', is_vendor_specific=True, ns_prefix='es'),
         rlFailureT=Parameter(name='rlFailureT', is_vendor_specific=True, ns_prefix='es'),
         nOutSyncInd=Parameter(name='nOutSyncInd', is_vendor_specific=True, ns_prefix='es'),
         sf4AdmUl=Parameter(name='sf4AdmUl', is_vendor_specific=True, ns_prefix='es'),
         hardIfhoCorr=Parameter(name='hardIfhoCorr', is_vendor_specific=True, ns_prefix='es'),
         hsdpaUsersAdm=Parameter(name='hsdpaUsersAdm', is_vendor_specific=True, ns_prefix='es'),
         loadSharingMargin=Parameter(name='loadSharingMargin', is_vendor_specific=True, ns_prefix='es'),
         sHcsRat=Parameter(name='sHcsRat', is_vendor_specific=True, ns_prefix='es'),
         sf16gAdm=Parameter(name='sf16gAdm', is_vendor_specific=True, ns_prefix='es'),
         releaseAseDlNg=Parameter(name='releaseAseDlNg', is_vendor_specific=True, ns_prefix='es'),
         tmCongActionNg=Parameter(name='tmCongActionNg', is_vendor_specific=True, ns_prefix='es'),
         tmInitialG=Parameter(name='tmInitialG', is_vendor_specific=True, ns_prefix='es'),
         sf16AdmUl=Parameter(name='sf16AdmUl', is_vendor_specific=True, ns_prefix='es'),
         sf8AdmUl=Parameter(name='sf8AdmUl', is_vendor_specific=True, ns_prefix='es'),
         sf8gAdmUl=Parameter(name='sf8gAdmUl', is_vendor_specific=True, ns_prefix='es'),
         iubLinkRef=Parameter(name='iubLinkRef', is_vendor_specific=True, ns_prefix='es'),
         eulNonServingCellUsersAdm=Parameter(name='eulNonServingCellUsersAdm', is_vendor_specific=True, ns_prefix='es'),
         eulServingCellUsersAdm=Parameter(name='eulServingCellUsersAdm', is_vendor_specific=True, ns_prefix='es'),
         agpsEnabled=Parameter(name='agpsEnabled', is_vendor_specific=True, ns_prefix='es'),
         codeLoadThresholdDlSf128=Parameter(name='codeLoadThresholdDlSf128', is_vendor_specific=True, ns_prefix='es'),
         pwrLoadThresholdDlSpeech_amr12200=Parameter(name='pwrLoadThresholdDlSpeech_amr12200', is_vendor_specific=True, ns_prefix='es'),
         pwrLoadThresholdDlSpeech_amr7950=Parameter(name='pwrLoadThresholdDlSpeech_amr7950', is_vendor_specific=True, ns_prefix='es'),
         pwrLoadThresholdDlSpeech_amr5900=Parameter(name='pwrLoadThresholdDlSpeech_amr5900', is_vendor_specific=True, ns_prefix='es'),
         pwrLoadThresholdDlSpeech_amrWb8850=Parameter(name='pwrLoadThresholdDlSpeech_amrWb8850', is_vendor_specific=True, ns_prefix='es'),
         pwrLoadThresholdDlSpeech_amrWb12650=Parameter(name='pwrLoadThresholdDlSpeech_amrWb12650', is_vendor_specific=True, ns_prefix='es'),
         aseLoadThresholdUlSpeech_amr12200=Parameter(name='aseLoadThresholdUlSpeech_amr12200', is_vendor_specific=True, ns_prefix='es'),
         aseLoadThresholdUlSpeech_amr7950=Parameter(name='aseLoadThresholdUlSpeech_amr7950', is_vendor_specific=True, ns_prefix='es'),
         aseLoadThresholdUlSpeech_amr5900=Parameter(name='aseLoadThresholdUlSpeech_amr5900', is_vendor_specific=True, ns_prefix='es'),
         aseLoadThresholdUlSpeech_amrWb8850=Parameter(name='aseLoadThresholdUlSpeech_amrWb8850', is_vendor_specific=True, ns_prefix='es'),
         aseLoadThresholdUlSpeech_amrWb12650=Parameter(name='aseLoadThresholdUlSpeech_amrWb12650', is_vendor_specific=True, ns_prefix='es'),
         accessClassesBarredCs=Parameter(name='accessClassesBarredCs', is_vendor_specific=True, ns_prefix='es'),
         accessClassesBarredPs=Parameter(name='accessClassesBarredPs', is_vendor_specific=True, ns_prefix='es'),
         rateSelectionPsInteractive_channelType=Parameter(name='rateSelectionPsInteractive_channelType', is_vendor_specific=True, ns_prefix='es'),
         rateSelectionPsInteractive_ulPrefRate=Parameter(name='rateSelectionPsInteractive_ulPrefRate', is_vendor_specific=True, ns_prefix='es'),
         rateSelectionPsInteractive_dlPrefRate=Parameter(name='rateSelectionPsInteractive_dlPrefRate', is_vendor_specific=True, ns_prefix='es'),
         hcsUsage_idleMode=Parameter(name='hcsUsage_idleMode', is_vendor_specific=True, ns_prefix='es'),
         hcsUsage_connectedMode=Parameter(name='hcsUsage_connectedMode', is_vendor_specific=True, ns_prefix='es'),
         hcsSib3Config_hcsPrio=Parameter(name='hcsSib3Config_hcsPrio', is_vendor_specific=True, ns_prefix='es'),
         hcsSib3Config_qHcs=Parameter(name='hcsSib3Config_qHcs', is_vendor_specific=True, ns_prefix='es'),
         hcsSib3Config_sSearchHcs=Parameter(name='hcsSib3Config_sSearchHcs', is_vendor_specific=True, ns_prefix='es'),
         amrWbRateUlMax=Parameter(name='amrWbRateUlMax', is_vendor_specific=True, ns_prefix='es'),
         amrWbRateDlMax=Parameter(name='amrWbRateDlMax', is_vendor_specific=True, ns_prefix='es'),
         antennaPosition_latitudeSign=Parameter(name='antennaPosition_latitudeSign', is_vendor_specific=True, ns_prefix='es'),
         antennaPosition_latitude=Parameter(name='antennaPosition_latitude', is_vendor_specific=True, ns_prefix='es'),
         antennaPosition_longitude=Parameter(name='antennaPosition_longitude', is_vendor_specific=True, ns_prefix='es'),
         mocnCellProfileRef=Parameter(name='mocnCellProfileRef', is_vendor_specific=True, ns_prefix='es'),
         standAloneSrbSelector=Parameter(name='standAloneSrbSelector', is_vendor_specific=True, ns_prefix='es'),
         amrNbSelector=Parameter(name='amrNbSelector', is_vendor_specific=True, ns_prefix='es'),
         eulServingCellUsersAdmTti2=Parameter(name='eulServingCellUsersAdmTti2', is_vendor_specific=True, ns_prefix='es'),
         cellBroadcastSac=Parameter(name='cellBroadcastSac', is_vendor_specific=True, ns_prefix='es'),
         ctchOccasionPeriod=Parameter(name='ctchOccasionPeriod', is_vendor_specific=True, ns_prefix='es'),
         transmissionScheme=Parameter(name='transmissionScheme', is_vendor_specific=True, ns_prefix='es'),
         loadBasedHoSupport=Parameter(name='loadBasedHoSupport', is_vendor_specific=True, ns_prefix='es'),
         useId=Parameter(name='useId', is_vendor_specific=True, ns_prefix='es'),
         cbsSchedulePeriodLength=Parameter(name='cbsSchedulePeriodLength', is_vendor_specific=True, ns_prefix='es'),
         fdpchSupport=Parameter(name='fdpchSupport', is_vendor_specific=True, ns_prefix='es'),
         ganHoEnabled=Parameter(name='ganHoEnabled', is_vendor_specific=True, ns_prefix='es'),
         loadBasedHoType=Parameter(name='loadBasedHoType', is_vendor_specific=True, ns_prefix='es'),
         serviceRestrictions_csVideoCalls=Parameter(name='serviceRestrictions_csVideoCalls', is_vendor_specific=True, ns_prefix='es'),
         hsIflsThreshUsers=Parameter(name='hsIflsThreshUsers', is_vendor_specific=True, ns_prefix='es'),
         hsIflsMarginUsers=Parameter(name='hsIflsMarginUsers', is_vendor_specific=True, ns_prefix='es'),
         dchIflsThreshPower=Parameter(name='dchIflsThreshPower', is_vendor_specific=True, ns_prefix='es'),
         dchIflsThreshCode=Parameter(name='dchIflsThreshCode', is_vendor_specific=True, ns_prefix='es'),
         dchIflsMarginPower=Parameter(name='dchIflsMarginPower', is_vendor_specific=True, ns_prefix='es'),
         dchIflsMarginCode=Parameter(name='dchIflsMarginCode', is_vendor_specific=True, ns_prefix='es'),
         pathlossThreshold=Parameter(name='pathlossThreshold', is_vendor_specific=True, ns_prefix='es'),
         iflsMode=Parameter(name='iflsMode', is_vendor_specific=True, ns_prefix='es'),
         cpcSupport=Parameter(name='cpcSupport', is_vendor_specific=True, ns_prefix='es'),
         absPrioCellRes_cellReselectionPriority=Parameter(name='absPrioCellRes_cellReselectionPriority', is_vendor_specific=True, ns_prefix='es'),
         absPrioCellRes_sPrioritySearch1=Parameter(name='absPrioCellRes_sPrioritySearch1', is_vendor_specific=True, ns_prefix='es'),
         absPrioCellRes_sPrioritySearch2=Parameter(name='absPrioCellRes_sPrioritySearch2', is_vendor_specific=True, ns_prefix='es'),
         absPrioCellRes_threshServingLow=Parameter(name='absPrioCellRes_threshServingLow', is_vendor_specific=True, ns_prefix='es'),
         absPrioCellRes_measIndFach=Parameter(name='absPrioCellRes_measIndFach', is_vendor_specific=True, ns_prefix='es'),
         spare=Parameter(name='spare', is_vendor_specific=True, ns_prefix='es'),
         secondaryCpichPower=Parameter(name='secondaryCpichPower', is_vendor_specific=True, ns_prefix='es'),
         ctchAdmMargin=Parameter(name='ctchAdmMargin', is_vendor_specific=True, ns_prefix='es'),
         rrcLcEnabled=Parameter(name='rrcLcEnabled', is_vendor_specific=True, ns_prefix='es'),
         mixedModeRadio=Parameter(name='mixedModeRadio', is_vendor_specific=True, ns_prefix='es'),
         sf128Adm=Parameter(name='sf128Adm', is_vendor_specific=True, ns_prefix='es'),
         sf64AdmUl=Parameter(name='sf64AdmUl', is_vendor_specific=True, ns_prefix='es'),
         admBlockRedirection_gsmRrc=Parameter(name='admBlockRedirection_gsmRrc', is_vendor_specific=True, ns_prefix='es'),
         admBlockRedirection_rrc=Parameter(name='admBlockRedirection_rrc', is_vendor_specific=True, ns_prefix='es'),
         admBlockRedirection_speech=Parameter(name='admBlockRedirection_speech', is_vendor_specific=True, ns_prefix='es'),
         dmcrEnabled=Parameter(name='dmcrEnabled', is_vendor_specific=True, ns_prefix='es'),
         hsIflsHighLoadThresh=Parameter(name='hsIflsHighLoadThresh', is_vendor_specific=True, ns_prefix='es'),
         hsIflsSpeechMultiRabTrigg=Parameter(name='hsIflsSpeechMultiRabTrigg', is_vendor_specific=True, ns_prefix='es'),
         cyclicAcb_acbEnabled=Parameter(name='cyclicAcb_acbEnabled', is_vendor_specific=True, ns_prefix='es'),
         cyclicAcb_rotationGroupSize=Parameter(name='cyclicAcb_rotationGroupSize', is_vendor_specific=True, ns_prefix='es'),
         cyclicAcbCs_acbEnabled=Parameter(name='cyclicAcbCs_acbEnabled', is_vendor_specific=True, ns_prefix='es'),
         cyclicAcbCs_rotationGroupSize=Parameter(name='cyclicAcbCs_rotationGroupSize', is_vendor_specific=True, ns_prefix='es'),
         cyclicAcbPs_acbEnabled=Parameter(name='cyclicAcbPs_acbEnabled', is_vendor_specific=True, ns_prefix='es'),
         cyclicAcbPs_rotationGroupSize=Parameter(name='cyclicAcbPs_rotationGroupSize', is_vendor_specific=True, ns_prefix='es'),
         releaseRedirect=Parameter(name='releaseRedirect', is_vendor_specific=True, ns_prefix='es'),
         releaseRedirectEutraTriggers_csFallbackCsRelease=Parameter(name='releaseRedirectEutraTriggers_csFallbackCsRelease', is_vendor_specific=True, ns_prefix='es'),
         releaseRedirectEutraTriggers_csFallbackDchToFach=Parameter(name='releaseRedirectEutraTriggers_csFallbackDchToFach', is_vendor_specific=True, ns_prefix='es'),
         releaseRedirectEutraTriggers_dchToFach=Parameter(name='releaseRedirectEutraTriggers_dchToFach', is_vendor_specific=True, ns_prefix='es'),
         releaseRedirectEutraTriggers_fachToUra=Parameter(name='releaseRedirectEutraTriggers_fachToUra', is_vendor_specific=True, ns_prefix='es'),
         releaseRedirectEutraTriggers_fastDormancy=Parameter(name='releaseRedirectEutraTriggers_fastDormancy', is_vendor_specific=True, ns_prefix='es'),
         releaseRedirectEutraTriggers_normalRelease=Parameter(name='releaseRedirectEutraTriggers_normalRelease', is_vendor_specific=True, ns_prefix='es'),
         spareA=Parameter(name='spareA', is_vendor_specific=True, ns_prefix='es'),
         srbAdmExempt=Parameter(name='srbAdmExempt', is_vendor_specific=True, ns_prefix='es'),
         reportingRange1a=Parameter(name='reportingRange1a', is_vendor_specific=True, ns_prefix='es'),
         reportingRange1b=Parameter(name='reportingRange1b', is_vendor_specific=True, ns_prefix='es'),
         timeToTrigger1a=Parameter(name='timeToTrigger1a', is_vendor_specific=True, ns_prefix='es'),
         timeToTrigger1b=Parameter(name='timeToTrigger1b', is_vendor_specific=True, ns_prefix='es'),
         downswitchTimer=Parameter(name='downswitchTimer', is_vendor_specific=True, ns_prefix='es'),
         hsdschInactivityTimer=Parameter(name='hsdschInactivityTimer', is_vendor_specific=True, ns_prefix='es'),
         hsdschInactivityTimerCpc=Parameter(name='hsdschInactivityTimerCpc', is_vendor_specific=True, ns_prefix='es'),
         inactivityTimeMultiPsInteractive=Parameter(name='inactivityTimeMultiPsInteractive', is_vendor_specific=True, ns_prefix='es'),
         inactivityTimer=Parameter(name='inactivityTimer', is_vendor_specific=True, ns_prefix='es'),
         inactivityTimerEnhUeDrx=Parameter(name='inactivityTimerEnhUeDrx', is_vendor_specific=True, ns_prefix='es'),
         inactivityTimerPch=Parameter(name='inactivityTimerPch', is_vendor_specific=True, ns_prefix='es'),
         redirectUarfcn=Parameter(name='redirectUarfcn', is_vendor_specific=True, ns_prefix='es'),
         dnclEnabled=Parameter(name='dnclEnabled', is_vendor_specific=True, ns_prefix='es'),
         servDiffRrcAdmHighPrioProfile=Parameter(name='servDiffRrcAdmHighPrioProfile', is_vendor_specific=True, ns_prefix='es'),
         anrIafUtranCellConfig_anrEnabled=Parameter(name='anrIafUtranCellConfig_anrEnabled', is_vendor_specific=True, ns_prefix='es'),
         anrIafUtranCellConfig_relationAddEnabled=Parameter(name='anrIafUtranCellConfig_relationAddEnabled', is_vendor_specific=True, ns_prefix='es'),
         dlCodeOffloadLimit=Parameter(name='dlCodeOffloadLimit', is_vendor_specific=True, ns_prefix='es'),
         dlPowerOffloadLimit=Parameter(name='dlPowerOffloadLimit', is_vendor_specific=True, ns_prefix='es'),
         hsdpaUsersOffloadLimit=Parameter(name='hsdpaUsersOffloadLimit', is_vendor_specific=True, ns_prefix='es'),
         hsIflsDownswitchTrigg_toFach=Parameter(name='hsIflsDownswitchTrigg_toFach', is_vendor_specific=True, ns_prefix='es'),
         hsIflsDownswitchTrigg_toUra=Parameter(name='hsIflsDownswitchTrigg_toUra', is_vendor_specific=True, ns_prefix='es'),
         hsIflsDownswitchTrigg_fastDormancy=Parameter(name='hsIflsDownswitchTrigg_fastDormancy', is_vendor_specific=True, ns_prefix='es'),
         hsIflsPowerLoadThresh=Parameter(name='hsIflsPowerLoadThresh', is_vendor_specific=True, ns_prefix='es'),
         hsIflsRedirectLoadLimit=Parameter(name='hsIflsRedirectLoadLimit', is_vendor_specific=True, ns_prefix='es'),
         hsIflsTrigger_fromFach=Parameter(name='hsIflsTrigger_fromFach', is_vendor_specific=True, ns_prefix='es'),
         hsIflsTrigger_fromUra=Parameter(name='hsIflsTrigger_fromUra', is_vendor_specific=True, ns_prefix='es'),
         iflsCpichEcnoThresh=Parameter(name='iflsCpichEcnoThresh', is_vendor_specific=True, ns_prefix='es'),
         iflsRedirectUarfcn=Parameter(name='iflsRedirectUarfcn', is_vendor_specific=True, ns_prefix='es'),
         releaseRedirectHsIfls=Parameter(name='releaseRedirectHsIfls', is_vendor_specific=True, ns_prefix='es'),
         pagingPermAccessCtrl_locRegAcb=Parameter(name='pagingPermAccessCtrl_locRegAcb', is_vendor_specific=True, ns_prefix='es'),
         pagingPermAccessCtrl_locRegRestr=Parameter(name='pagingPermAccessCtrl_locRegRestr', is_vendor_specific=True, ns_prefix='es'),
         pagingPermAccessCtrl_pagingRespRestr=Parameter(name='pagingPermAccessCtrl_pagingRespRestr', is_vendor_specific=True, ns_prefix='es'),
         ueHsThpMeasSupport=Parameter(name='ueHsThpMeasSupport', is_vendor_specific=True, ns_prefix='es'),
         updateLocator=Parameter(name='updateLocator', is_vendor_specific=True, ns_prefix='es'),
         autoAcbRcssrThresh=Parameter(name='autoAcbRcssrThresh', is_vendor_specific=True, ns_prefix='es'),
         autoAcbRtwpThresh=Parameter(name='autoAcbRtwpThresh', is_vendor_specific=True, ns_prefix='es'),
         autoAcbMinRcssrInput=Parameter(name='autoAcbMinRcssrInput', is_vendor_specific=True, ns_prefix='es'),
         autoAcbRcssrWeight=Parameter(name='autoAcbRcssrWeight', is_vendor_specific=True, ns_prefix='es'),
         autoAcbMaxPsClassesToBar=Parameter(name='autoAcbMaxPsClassesToBar', is_vendor_specific=True, ns_prefix='es'),
         autoAcbRtwpWeight=Parameter(name='autoAcbRtwpWeight', is_vendor_specific=True, ns_prefix='es'),
         autoAcbEnabled=Parameter(name='autoAcbEnabled', is_vendor_specific=True, ns_prefix='es'),
         supportedCellType=Parameter(name='supportedCellType', is_vendor_specific=True, ns_prefix='es'),
         rwrEutraCc=Parameter(name='rwrEutraCc', is_vendor_specific=True, ns_prefix='es'),
         eulMcServingCellUsersAdmTti2=Parameter(name='eulMcServingCellUsersAdmTti2', is_vendor_specific=True, ns_prefix='es'),
         primaryTpsCell=Parameter(name='primaryTpsCell', is_vendor_specific=True, ns_prefix='es'),
         tpsPowerLockState=Parameter(name='tpsPowerLockState', is_vendor_specific=True, ns_prefix='es'),
         tpsCellThresholds_tpsCellThreshEnabled=Parameter(name='tpsCellThresholds_tpsCellThreshEnabled', is_vendor_specific=True, ns_prefix='es'),
         tpsCellThresholds_tpsLockThreshold=Parameter(name='tpsCellThresholds_tpsLockThreshold', is_vendor_specific=True, ns_prefix='es'),
         tpsCellThresholds_tpsUnlockThreshold=Parameter(name='tpsCellThresholds_tpsUnlockThreshold', is_vendor_specific=True, ns_prefix='es'),
         dlCodePowerCmEnabled=Parameter(name='dlCodePowerCmEnabled', is_vendor_specific=True, ns_prefix='es'),
         poolRedundancy=Parameter(name='poolRedundancy', is_vendor_specific=True, ns_prefix='es'),
         rachOverloadProtect=Parameter(name='rachOverloadProtect', is_vendor_specific=True, ns_prefix='es'),
         srvccCapability=Parameter(name='srvccCapability', is_vendor_specific=True, ns_prefix='es'),
         rimCapable=Parameter(name='rimCapable', is_vendor_specific=True, ns_prefix='es'),
         ifIratHoPsIntHsEnabled=Parameter(name='ifIratHoPsIntHsEnabled', is_vendor_specific=True, ns_prefix='es'),
         cellUpdateConfirmPsInitRepeat=Parameter(name='cellUpdateConfirmPsInitRepeat', is_vendor_specific=True, ns_prefix='es'),
         cellUpdateConfirmCsInitRepeat=Parameter(name='cellUpdateConfirmCsInitRepeat', is_vendor_specific=True, ns_prefix='es'),
        )
        
        BulkCMExtras.__init__(self)

        # Set the values
        for k, v in kwargs.items():
            self.set_parameter_value(k, v)

        self.ns_prefix = 'xn'
        
        

class UtranRelation(ManagedObject, BulkCMExtras):
    def __init__(self, **kwargs):
        ManagedObject.__init__(self, 'UtranRelation',
         id=Parameter(name='id', is_attr=True),
         adjacentCell=Parameter(name='adjacentCell'),
         qOffset1sn=Parameter(name='qOffset1sn', is_vendor_specific=True, ns_prefix='es'),
         qOffset2sn=Parameter(name='qOffset2sn', is_vendor_specific=True, ns_prefix='es'),
         loadSharingCandidate=Parameter(name='loadSharingCandidate', is_vendor_specific=True, ns_prefix='es'),
         selectionPriority=Parameter(name='selectionPriority', is_vendor_specific=True, ns_prefix='es'),
         frequencyRelationType=Parameter(name='frequencyRelationType', is_vendor_specific=True, ns_prefix='es'),
         nodeRelationType=Parameter(name='nodeRelationType', is_vendor_specific=True, ns_prefix='es'),
         hcsSib11Config_hcsPrio=Parameter(name='hcsSib11Config_hcsPrio', is_vendor_specific=True, ns_prefix='es'),
         hcsSib11Config_qHcs=Parameter(name='hcsSib11Config_qHcs', is_vendor_specific=True, ns_prefix='es'),
         hcsSib11Config_penaltyTime=Parameter(name='hcsSib11Config_penaltyTime', is_vendor_specific=True, ns_prefix='es'),
         hcsSib11Config_temporaryOffset1=Parameter(name='hcsSib11Config_temporaryOffset1', is_vendor_specific=True, ns_prefix='es'),
         hcsSib11Config_temporaryOffset2=Parameter(name='hcsSib11Config_temporaryOffset2', is_vendor_specific=True, ns_prefix='es'),
         mobilityRelationType=Parameter(name='mobilityRelationType', is_vendor_specific=True, ns_prefix='es'),
         createdBy=Parameter(name='createdBy', is_vendor_specific=True, ns_prefix='es'),
         creationTime=Parameter(name='creationTime', is_vendor_specific=True, ns_prefix='es'),
        )
        
        BulkCMExtras.__init__(self)

        # Set the values
        for k, v in kwargs.items():
            self.set_parameter_value(k, v)

        self.ns_prefix = 'xn'
        
        
